# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # Docs at https://docs.vagrantup.com.

  config.vm.box = "bento/ubuntu-20.04"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  config.vm.provider "virtualbox" do |vb|
    vb.name = "dotIrisVmBase"
    # Display the VirtualBox GUI when booting the machine
    # vb.gui = true

    # Customize the amount of memory on the VM:
    vb.memory = "2048"
    vb.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga", "--vram", "128"]
    vb.customize ["modifyvm", :id, "--accelerate3d", "off"]
    # Create CDROM drive to allow installing Guest Additions if needed.
    vb.customize ["storageattach", :id, "--storagectl", "IDE Controller", "--type", "dvddrive", "--port", "0", "--device", "0", "--medium", "emptydrive"]
  end

  config.vm.provision "shell", path: "./root-provision.sh"
  config.vm.provision "shell", privileged: false, path: "./user-provision.sh"
  # To create a working base box, the vagrant user must use the baseline
  # insecure key, as documented by
  # https://www.vagrantup.com/docs/boxes/base.html#quot-vagrant-quot-user.
  # If this fails, you will still be able to build machines from the produced box,
  # but Vagrant will fail to SSH into those machines.
  # To keep the key unchanged, shut down the machine from VirtualBox directly,
  # not from Vagrant.
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    curl -s https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant.pub > ~/.ssh/authorized_keys
    chown vagrant.vagrant -R ~/.ssh
    chmod 0700 ~/.ssh
    chmod 0600 ~/.ssh/authorized_keys
  SHELL
end
